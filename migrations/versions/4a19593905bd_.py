"""empty message

Revision ID: 4a19593905bd
Revises: c50dc71b5ee3
Create Date: 2023-08-11 09:12:50.286491

"""
from alembic import op
import sqlalchemy as sa
from models.genres_enum import Genres

# revision identifiers, used by Alembic.
revision = '4a19593905bd'
down_revision = 'c50dc71b5ee3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Genre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Artist_Genre',
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['Genre.id'], ),
    sa.PrimaryKeyConstraint('artist_id', 'genre_id')
    )
    op.create_table('Venue_Genre',
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['Genre.id'], ),
    sa.ForeignKeyConstraint(['venue_id'], ['Venue.id'], ),
    sa.PrimaryKeyConstraint('venue_id', 'genre_id')
    )
    with op.batch_alter_table('Artist', schema=None) as batch_op:
        batch_op.drop_column('genres')

    with op.batch_alter_table('Venue', schema=None) as batch_op:
        batch_op.drop_column('genres')

    # populate genres table from the enum 
    genres = ''
    first = True
    for genre in Genres.list():
        if not first:
            genres += f",('{genre}')"
        else:
            first = False
            genres += f"('{genre}')"
            
    insert_genres_statement = f'INSERT INTO "Genre" (name) VALUES {genres}'
    op.execute(insert_genres_statement)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Venue', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genres', sa.VARCHAR(length=120), autoincrement=False, nullable=False))

    with op.batch_alter_table('Artist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genres', sa.VARCHAR(length=120), autoincrement=False, nullable=False))

    op.drop_table('Venue_Genre')
    op.drop_table('Artist_Genre')
    op.drop_table('Genre')
    # ### end Alembic commands ###
